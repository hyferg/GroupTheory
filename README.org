* Modules
** GraphRecursive
*** Types
**** EdgeType                                                          :data:
**** Label                                                             :type:
**** Node                                                              :data:
**** Edge                                                              :data:
**** GraphElement                                                      :data:
**** Operation                                                         :data:
***** InsertE
***** InsertN
***** RemoveE
***** Swap
***** Merge
***** DeleteE
***** DeleteN

**** GraphRecursive                                                   :class:
***** getNode
***** getEdge
***** freeEdgeLabelsOf
***** freeNodeLabelsOf
***** allNodes
***** allEdges
***** safeSplit
***** work
***** swapChain
***** isEmpty
**** LabelEquatable                                                   :class:
***** (=@), (/=@)
**** ColorEquatable                                                   :class:
***** (=~), (/=~)
**** Invertable                                                       :class:
***** invert
*** Function
**** oriented
**** orientEdge
**** edgeType
**** chiralEq
**** antiChiralEq
**** otherNode
**** rotate
**** is
** GraphData                                                 :GraphRecursive:
*** Types
**** GraphData                                                         :data:
*** Functions
**** emptyGraph
** Graphs                                                    :GraphRecursive:
*** Function
**** peace6j
**** pill
**** oneCasimir
**** twoCasimir
**** threeCasimir
**** fourCasimir
** Rules                                                     :GraphRecursive:
*** Type
**** GraphRecursive                                                   :class:
**** Poly                                                              :type:
**** VectorSpace                                                       :data:
**** Scope                                                             :data:
**** TreeVertex                                                        :type:
*** Function
**** twistRule
**** gggRule
**** tadpoleRule
**** shrinkChainRule
**** loopRule
**** sunP1Rule
** Algo                                                               :Rules:
*** Function
**** build
**** buildNode
**** foldNode
** main                                               :GraphData:Algo:Graphs:
_
